{"remainingRequest":"/Users/kingvince/School/Web Programming/letsExercise/client/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kingvince/School/Web Programming/letsExercise/client/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kingvince/School/Web Programming/letsExercise/client/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kingvince/School/Web Programming/letsExercise/client/front-end/src/views/Login.vue?vue&type=template&id=26084dc2&scoped=true&","dependencies":[{"path":"/Users/kingvince/School/Web Programming/letsExercise/client/front-end/src/views/Login.vue","mtime":1543474219353},{"path":"/Users/kingvince/School/Web Programming/letsExercise/client/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1543509510514},{"path":"/Users/kingvince/School/Web Programming/letsExercise/client/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kingvince/School/Web Programming/letsExercise/client/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1543509510514},{"path":"/Users/kingvince/School/Web Programming/letsExercise/client/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"hello\" },\n    [\n      _c(\"h1\", [_vm._v(\"Login to your account\")]),\n      _vm._m(0),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.input.firstName,\n            expression: \"input.firstName\"\n          }\n        ],\n        attrs: {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          required: \"\"\n        },\n        domProps: { value: _vm.input.firstName },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.$set(_vm.input, \"firstName\", $event.target.value)\n          }\n        }\n      }),\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.input.lastName,\n            expression: \"input.lastName\"\n          }\n        ],\n        attrs: {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          required: \"\"\n        },\n        domProps: { value: _vm.input.lastName },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.$set(_vm.input, \"lastName\", $event.target.value)\n          }\n        }\n      }),\n      _c(\n        \"button\",\n        {\n          on: {\n            click: function($event) {\n              _vm.sendData()\n            }\n          }\n        },\n        [_vm._v(\"Login\")]\n      ),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"h3\", [_vm._v(_vm._s(_vm.response) + \" \")]),\n      _c(\"textarea\", [_vm._v(_vm._s(_vm.message))]),\n      _c(\"h3\", [\n        _vm._v(\" Logged Exercises \"),\n        _c(\n          \"a\",\n          {\n            staticClass: \"btn btn-sm btn-primary\",\n            on: {\n              click: function($event) {\n                $event.preventDefault()\n                _vm.show()\n              }\n            }\n          },\n          [_vm._v(\"+\")]\n        )\n      ]),\n      _c(\n        \"ul\",\n        { staticClass: \"list-group list-group-flush\" },\n        _vm._l(_vm.exercises, function(e) {\n          return _c(\"li\", { key: e, staticClass: \"list-group-item\" }, [\n            _vm._v(_vm._s(e))\n          ])\n        })\n      ),\n      _c(\"h3\", [\n        _vm._v(\" Uploaded Pictures  \"),\n        _c(\n          \"a\",\n          {\n            staticClass: \"btn btn-sm btn-primary\",\n            on: {\n              click: function($event) {\n                $event.preventDefault()\n                _vm.showPictureModal()\n              }\n            }\n          },\n          [_vm._v(\"+\")]\n        )\n      ]),\n      _c(\"img\", { attrs: { src: \"\" + _vm.photo } }),\n      _c(\n        \"ul\",\n        { staticClass: \"list-group list-group-flush\", attrs: { id: \"menu\" } },\n        [\n          _c(\n            \"li\",\n            _vm._l(_vm.photo, function(p) {\n              return _c(\"a\", { key: p, staticClass: \"img-thumbnail\" }, [\n                _c(\"img\", {\n                  attrs: { src: p },\n                  on: {\n                    click: function($event) {\n                      _vm.deletePhoto(p)\n                    }\n                  }\n                })\n              ])\n            })\n          )\n        ]\n      ),\n      _c(\n        \"modal\",\n        { staticClass: \"modal-body\", attrs: { name: \"hello-world\" } },\n        [\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"label\", { attrs: { for: \"exampleInputEmail1\" } }, [\n              _vm._v(\"Exercise Name\")\n            ]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.input.name,\n                  expression: \"input.name\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: {\n                type: \"text\",\n                id: \"exercisename\",\n                \"aria-describedby\": \"exercise\",\n                placeholder: \"Name of Exercise\",\n                required: \"\"\n              },\n              domProps: { value: _vm.input.name },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.input, \"name\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"label\", { attrs: { for: \"exerciseDuration\" } }, [\n              _vm._v(\"Duration\")\n            ]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.input.duration,\n                  expression: \"input.duration\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: {\n                type: \"text\",\n                id: \"exerciseDuration\",\n                placeholder: \"Duration\",\n                required: \"\"\n              },\n              domProps: { value: _vm.input.duration },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.input, \"duration\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"label\", { attrs: { for: \"exampleInputPassword1\" } }, [\n              _vm._v(\"Date\")\n            ]),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.input.Date,\n                  expression: \"input.Date\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: {\n                type: \"date\",\n                id: \"date\",\n                placeholder: \"date\",\n                required: \"\"\n              },\n              domProps: { value: _vm.input.Date },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.input, \"Date\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-primary\",\n              on: {\n                click: function($event) {\n                  _vm.sendExercise()\n                }\n              }\n            },\n            [_vm._v(\"Submit\")]\n          )\n        ]\n      ),\n      _c(\n        \"modal\",\n        {\n          staticClass: \"modal-body\",\n          attrs: { name: \"picture-modal\", id: \"picture-modal\" }\n        },\n        [\n          _c(\n            \"form\",\n            {\n              attrs: {\n                id: \"picture-form\",\n                action: \"http://localhost:3000/upload/\",\n                method: \"post\",\n                enctype: \"multipart/form-data\"\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"exampleInputFile\" } }, [\n                  _vm._v(\"CHOOSE FILE\")\n                ]),\n                _c(\"input\", {\n                  attrs: { type: \"file\", name: \"photo\", required: \"\" }\n                }),\n                _c(\"input\", {\n                  attrs: {\n                    type: \"hidden\",\n                    id: \"user\",\n                    name: \"userId\",\n                    value: \"\"\n                  }\n                }),\n                _c(\"p\", { staticClass: \"help-block\" }, [\n                  _vm._v(\"Upload a picture\")\n                ])\n              ]),\n              _c(\n                \"button\",\n                { staticClass: \"btn btn-primary\", attrs: { type: \"submit\" } },\n                [_vm._v(\"Submit\")]\n              )\n            ]\n          )\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", [\n      _vm._v(\"Register \"),\n      _c(\"a\", { attrs: { href: \"/register\" } }, [_vm._v(\"Here \")]),\n      _vm._v(\"if you do not have an account\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}